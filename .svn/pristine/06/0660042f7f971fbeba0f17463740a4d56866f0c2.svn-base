package com.xweisoft.wx.family.ui.grade;

import java.util.ArrayList;
import java.util.Map;

import android.app.Activity;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.BaseAdapter;
import android.widget.GridView;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.xweisoft.wx.family.R;
import com.xweisoft.wx.family.logic.global.HttpAddressProperties;
import com.xweisoft.wx.family.logic.model.HistoryScoreItem;
import com.xweisoft.wx.family.logic.model.response.HistoryTopListResp;
import com.xweisoft.wx.family.util.HttpRequestUtil;
import com.xweisoft.wx.family.util.ListUtil;
import com.xweisoft.wx.family.widget.NetHandler;

/**
 * Created by lm on 2015/6/23.
 */

public class HistoryScoreGroupActicvity extends Activity implements
        View.OnClickListener
{
    private ImageView back;
    
    private TextView title;
    
    private GridView lastTermRepost, nextTermRepost;
    
    private String[] lastTerm = { "80", "98", "99", "89", "优", "89", "78",
            "87", "89", "良", "98", "89", "89", "89", "优", };
    
    private String[] nextTerm = { "86", "78", "89", "80", "良", "95", "88",
            "77", "95", "优", "100", "89", "79", "91", "优", };
    
    private ReportAdapter lastTermAdapter;
    
    private ReportAdapter nextTeramAdapter;
    
    private View shadow;
    
    private int shadowWdith;
    
    private View view;
    
    private View titleLayout;
    
    int titleHeight;
    
    ArrayList<HistoryScoreItem> subs; //科目
    
    private Handler handler = new NetHandler(false)
    {
        
        @Override
        public void onSuccess(String errMsg, Message msg)
        {
            
            HistoryTopListResp hisscore = null;
            if (null != msg.obj && msg.obj instanceof HistoryTopListResp)
            {
                hisscore = (HistoryTopListResp) msg.obj;
                if (!ListUtil.isEmpty(hisscore.historyScoreItemsList))
                {
                    subs.clear();
                    subs.addAll(hisscore.historyScoreItemsList);
                    
                }
                
            }
        }
        
        @Override
        public void onFailed(String errCode, String errMsg, Message msg)
        {
            //showToast(errMsg);
            
        }
    };
    
    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        setContentView(R.layout.grade_history_vipager);
        initViews();
        sendRequest();
        
    }
    
    //发送请求科目
    public void sendRequest()
    {
        Map<String, String> param = HttpRequestUtil.getCommonParams("schoolSubjects");
        HttpRequestUtil.sendHttpPostCommonRequest(HistoryScoreGroupActicvity.this,
                HttpAddressProperties.SERVICE_URL,
                param,
                HistoryScoreItem.class,
                handler);
    }
    
    private void initViews()
    {
        back = (ImageView) findViewById(R.id.common_left_back_imageview);
        //title = (TextView)findViewById(R.id.title);
        // title.setText(getString(R.string.report));
        back.setOnClickListener(this);
        lastTermRepost = (GridView) findViewById(R.id.last_term_report);
        nextTermRepost = (GridView) findViewById(R.id.next_term_report);
        
        lastTermAdapter = new ReportAdapter(lastTerm, lastTermRepost);
        nextTeramAdapter = new ReportAdapter(nextTerm, nextTermRepost);
        
        lastTermRepost.setAdapter(lastTermAdapter);
        nextTermRepost.setAdapter(nextTeramAdapter);
        shadow = (View) findViewById(R.id.shadow);
        shadow.setVisibility(View.GONE);
        
        findViewById(R.id.chinese).setOnClickListener(this);
        findViewById(R.id.math).setOnClickListener(this);
        findViewById(R.id.english).setOnClickListener(this);
        findViewById(R.id.art).setOnClickListener(this);
        findViewById(R.id.music).setOnClickListener(this);
        titleLayout = (View) findViewById(R.id.title_layout);
        
        view = findViewById(R.id.chinese);
        view.post(new Runnable()
        {
            @Override
            public void run()
            {
                shadowWdith = view.getMeasuredWidth();
                shadow.setLayoutParams(new RelativeLayout.LayoutParams(
                        shadowWdith, RelativeLayout.LayoutParams.MATCH_PARENT));
            }
        });
        
        titleLayout.post(new Runnable()
        {
            @Override
            public void run()
            {
                titleHeight = titleLayout.getMeasuredHeight();
                
            }
        });
        
    }
    
    @Override
    public void onClick(View v)
    {
        switch (v.getId())
        {
            case R.id.common_left_back_imageview:
                this.finish();
                break;
            case R.id.chinese:
            case R.id.math:
            case R.id.art:
            case R.id.music:
            case R.id.english:
                int[] location = new int[2];
                v.getLocationOnScreen(location);
                int x = location[0];
                int y = location[1];
                
                if (shadow.getVisibility() == View.GONE)
                {
                    shadow.setVisibility(View.VISIBLE);
                }
                
                shadow.animate()
                        .translationX(x)
                        .translationY(titleHeight)
                        .setDuration(200)
                        .start();
                
                break;
        
        }
        
    }
    
    class ReportAdapter extends BaseAdapter
    {
        
        private String[] reports;
        
        private GridView gv;
        
        public ReportAdapter(String[] reports, GridView gv)
        {
            this.reports = reports;
            this.gv = gv;
            
        }
        
        @Override
        public int getCount()
        {
            return reports.length;
        }
        
        @Override
        public Object getItem(int position)
        {
            return position;
        }
        
        @Override
        public long getItemId(int position)
        {
            return position;
        }
        
        @Override
        public View getView(int position, View convertView, ViewGroup parent)
        {
            
            int height = gv.getMeasuredHeight();
            
            convertView = View.inflate(HistoryScoreGroupActicvity.this,
                    R.layout.report_item,
                    null);
            RelativeLayout.LayoutParams params = new RelativeLayout.LayoutParams(
                    RelativeLayout.LayoutParams.MATCH_PARENT, height / 3);
            
            TextView score = (TextView) convertView.findViewById(R.id.score);
            score.setLayoutParams(params);
            score.setText(reports[position]);
            return convertView;
        }
    }
}
